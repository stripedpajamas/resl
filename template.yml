AWSTemplateFormatVersion: '2010-09-09'

Description: AWS API Gateway with a Lambda Integration

Parameters:
  ImageUri:
    Type: String

Resources:
  ReslSlackListenerApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: This lambda listens to Slack
      FunctionName: 'resl_slack_listener'
      Handler: slack_listener
      Role: !GetAtt ReslSlackListenerLambdaIamRole.Arn
      CodeUri: ./
      Runtime: go1.x
      Timeout: 29
      Events:
        ApiEvent:
          Type: HttpApi
          Path: /run
          Method: POST

  ReslCodeExecLambda:
    Type: AWS::Serverless::Function
    Properties:
      Description: the resl lang lambda
      FunctionName: 'resl_code_exec'
      PackageType: Image
      ImageUri: !Ref ImageUri

  ReslSlackResponderLambda:
    Type: AWS::Serverless::Function
    Properties:
      Description: This lambda calls the code execution lambda and responds to Slack
      FunctionName: 'resl_slack_responder'
      Handler: slack_responder
      Role: !GetAtt ReslSlackResponderLambdaIamRole.Arn
      CodeUri: ./
      Runtime: go1.x
      Timeout: 29

  ReslSlackResponderLambdaIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: InvokeLangLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:InvokeAsync'
                Resource: !GetAtt ReslCodeExecLambda.Arn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  ReslSlackListenerLambdaIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: InvokeLangLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:InvokeAsync'
                Resource: !GetAtt ReslSlackResponderLambda.Arn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

Transform: AWS::Serverless-2016-10-31
